/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  10: {
    ReputationTokens: {
      address: "0xf97d2ad2b457769b9d5c3632eb2a15a9d4adb148",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "newOwner",
              type: "address",
              internalType: "address",
            },
            {
              name: "admins",
              type: "address[]",
              internalType: "address[]",
            },
            {
              name: "tokenUpdaters",
              type: "address[]",
              internalType: "address[]",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "MINTER_ROLE",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "TOKEN_MIGRATOR_ROLE",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "TOKEN_UPDATER_ROLE",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "accountsByToken",
          inputs: [
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "address[]",
              internalType: "address[]",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "balanceOf",
          inputs: [
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "balanceOfBatch",
          inputs: [
            {
              name: "accounts",
              type: "address[]",
              internalType: "address[]",
            },
            {
              name: "ids",
              type: "uint256[]",
              internalType: "uint256[]",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256[]",
              internalType: "uint256[]",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "burnedBalanceOf",
          inputs: [
            {
              name: "addr",
              type: "address",
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "burnedBalance",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "distributableBalanceOf",
          inputs: [
            {
              name: "addr",
              type: "address",
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "distributableBalance",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "distribute",
          inputs: [
            {
              name: "from",
              type: "address",
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "value",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "data",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "distributeBatch",
          inputs: [
            {
              name: "from",
              type: "address",
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "ids",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "values",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "data",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "getRoleAdmin",
          inputs: [
            {
              name: "role",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getRoleMember",
          inputs: [
            {
              name: "role",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "index",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getRoleMemberCount",
          inputs: [
            {
              name: "role",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getTokenType",
          inputs: [
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint8",
              internalType: "enum IReputationTokensTypes.TokenType",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "grantRole",
          inputs: [
            {
              name: "role",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "hasRole",
          inputs: [
            {
              name: "role",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "honestBalanceOf",
          inputs: [
            {
              name: "addr",
              type: "address",
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "transferrableBalance",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "isApprovedForAll",
          inputs: [
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
            {
              name: "operator",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "migrate",
          inputs: [
            {
              name: "from",
              type: "address",
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "value",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "data",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "migrateBatch",
          inputs: [
            {
              name: "from",
              type: "address",
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "ids",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "values",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "data",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "mint",
          inputs: [
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "value",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "data",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "mintBatch",
          inputs: [
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "ids",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "values",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "data",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "owner",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "renounceRole",
          inputs: [
            {
              name: "role",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "revokeRole",
          inputs: [
            {
              name: "role",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "safeBatchTransferFrom",
          inputs: [
            {
              name: "from",
              type: "address",
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "ids",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "values",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "data",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "safeTransferFrom",
          inputs: [
            {
              name: "from",
              type: "address",
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "value",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "data",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "setApprovalForAll",
          inputs: [
            {
              name: "operator",
              type: "address",
              internalType: "address",
            },
            {
              name: "status",
              type: "bool",
              internalType: "bool",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "supportsInterface",
          inputs: [
            {
              name: "interfaceId",
              type: "bytes4",
              internalType: "bytes4",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "tokensByAccount",
          inputs: [
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256[]",
              internalType: "uint256[]",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "totalHolders",
          inputs: [
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "totalSupply",
          inputs: [
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "transferOwnership",
          inputs: [
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "updateToken",
          inputs: [
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "tokenType",
              type: "uint8",
              internalType: "enum IReputationTokensTypes.TokenType",
            },
            {
              name: "uri",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "updateTokenBatch",
          inputs: [
            {
              name: "ids",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "tokenTypes",
              type: "uint8[]",
              internalType: "enum IReputationTokensTypes.TokenType[]",
            },
            {
              name: "uris",
              type: "string[]",
              internalType: "string[]",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "uri",
          inputs: [
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "event",
          name: "ApprovalForAll",
          inputs: [
            {
              name: "account",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "operator",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "approved",
              type: "bool",
              indexed: false,
              internalType: "bool",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Create",
          inputs: [
            {
              name: "tokenId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Distribute",
          inputs: [
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "value",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "DistributeBatch",
          inputs: [
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256[]",
              indexed: false,
              internalType: "uint256[]",
            },
            {
              name: "value",
              type: "uint256[]",
              indexed: false,
              internalType: "uint256[]",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Migrate",
          inputs: [
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "id",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "value",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "MigrateBatch",
          inputs: [
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "ids",
              type: "uint256[]",
              indexed: false,
              internalType: "uint256[]",
            },
            {
              name: "values",
              type: "uint256[]",
              indexed: false,
              internalType: "uint256[]",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Mint",
          inputs: [
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "value",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "MintBatch",
          inputs: [
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "tokenIds",
              type: "uint256[]",
              indexed: false,
              internalType: "uint256[]",
            },
            {
              name: "values",
              type: "uint256[]",
              indexed: false,
              internalType: "uint256[]",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "OwnershipTransferred",
          inputs: [
            {
              name: "previousOwner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "newOwner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "RoleAdminChanged",
          inputs: [
            {
              name: "role",
              type: "bytes32",
              indexed: true,
              internalType: "bytes32",
            },
            {
              name: "previousAdminRole",
              type: "bytes32",
              indexed: true,
              internalType: "bytes32",
            },
            {
              name: "newAdminRole",
              type: "bytes32",
              indexed: true,
              internalType: "bytes32",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "RoleGranted",
          inputs: [
            {
              name: "role",
              type: "bytes32",
              indexed: true,
              internalType: "bytes32",
            },
            {
              name: "account",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "sender",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "RoleRevoked",
          inputs: [
            {
              name: "role",
              type: "bytes32",
              indexed: true,
              internalType: "bytes32",
            },
            {
              name: "account",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "sender",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "TransferBatch",
          inputs: [
            {
              name: "operator",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "ids",
              type: "uint256[]",
              indexed: false,
              internalType: "uint256[]",
            },
            {
              name: "values",
              type: "uint256[]",
              indexed: false,
              internalType: "uint256[]",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "TransferSingle",
          inputs: [
            {
              name: "operator",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "id",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "value",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "URI",
          inputs: [
            {
              name: "value",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "tokenId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Update",
          inputs: [
            {
              name: "tokenId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "tokenType",
              type: "uint8",
              indexed: true,
              internalType: "enum IReputationTokensTypes.TokenType",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "UpdateBatch",
          inputs: [
            {
              name: "tokenId",
              type: "uint256[]",
              indexed: true,
              internalType: "uint256[]",
            },
            {
              name: "tokenType",
              type: "uint8[]",
              indexed: true,
              internalType: "enum IReputationTokensTypes.TokenType[]",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "ERC1155Base__ArrayLengthMismatch",
          inputs: [],
        },
        {
          type: "error",
          name: "ERC1155Base__BalanceQueryZeroAddress",
          inputs: [],
        },
        {
          type: "error",
          name: "ERC1155Base__BurnExceedsBalance",
          inputs: [],
        },
        {
          type: "error",
          name: "ERC1155Base__BurnFromZeroAddress",
          inputs: [],
        },
        {
          type: "error",
          name: "ERC1155Base__ERC1155ReceiverNotImplemented",
          inputs: [],
        },
        {
          type: "error",
          name: "ERC1155Base__ERC1155ReceiverRejected",
          inputs: [],
        },
        {
          type: "error",
          name: "ERC1155Base__MintToZeroAddress",
          inputs: [],
        },
        {
          type: "error",
          name: "ERC1155Base__NotOwnerOrApproved",
          inputs: [],
        },
        {
          type: "error",
          name: "ERC1155Base__SelfApproval",
          inputs: [],
        },
        {
          type: "error",
          name: "ERC1155Base__TransferExceedsBalance",
          inputs: [],
        },
        {
          type: "error",
          name: "ERC1155Base__TransferToZeroAddress",
          inputs: [],
        },
        {
          type: "error",
          name: "ERC165Base__InvalidInterfaceId",
          inputs: [],
        },
        {
          type: "error",
          name: "EnumerableSet__IndexOutOfBounds",
          inputs: [],
        },
        {
          type: "error",
          name: "Ownable__NotOwner",
          inputs: [],
        },
        {
          type: "error",
          name: "Ownable__NotTransitiveOwner",
          inputs: [],
        },
        {
          type: "error",
          name: "ReputationTokens__CannotTransferSoulboundToken",
          inputs: [],
        },
        {
          type: "error",
          name: "ReputationTokens__InsufficientBalance",
          inputs: [],
        },
        {
          type: "error",
          name: "UintUtils__InsufficientPadding",
          inputs: [],
        },
        {
          type: "error",
          name: "UintUtils__InvalidBase",
          inputs: [],
        },
      ],
      inheritedFunctions: {
        owner: "lib/reputation/lib/solidstate-solidity/contracts/access/ownable/Ownable.sol",
        transferOwnership: "lib/reputation/lib/solidstate-solidity/contracts/access/ownable/Ownable.sol",
        MINTER_ROLE: "lib/reputation/contracts/ReputationTokensBase.sol",
        TOKEN_MIGRATOR_ROLE: "lib/reputation/contracts/ReputationTokensBase.sol",
        TOKEN_UPDATER_ROLE: "lib/reputation/contracts/ReputationTokensBase.sol",
        accountsByToken: "lib/reputation/contracts/ReputationTokensBase.sol",
        balanceOf: "lib/reputation/contracts/ReputationTokensBase.sol",
        balanceOfBatch: "lib/reputation/contracts/ReputationTokensBase.sol",
        burnedBalanceOf: "lib/reputation/contracts/ReputationTokensBase.sol",
        distributableBalanceOf: "lib/reputation/contracts/ReputationTokensBase.sol",
        distribute: "lib/reputation/contracts/ReputationTokensBase.sol",
        distributeBatch: "lib/reputation/contracts/ReputationTokensBase.sol",
        getRoleAdmin: "lib/reputation/contracts/ReputationTokensBase.sol",
        getRoleMember: "lib/reputation/contracts/ReputationTokensBase.sol",
        getRoleMemberCount: "lib/reputation/contracts/ReputationTokensBase.sol",
        getTokenType: "lib/reputation/contracts/ReputationTokensBase.sol",
        grantRole: "lib/reputation/contracts/ReputationTokensBase.sol",
        hasRole: "lib/reputation/contracts/ReputationTokensBase.sol",
        honestBalanceOf: "lib/reputation/contracts/ReputationTokensBase.sol",
        isApprovedForAll: "lib/reputation/contracts/ReputationTokensBase.sol",
        migrate: "lib/reputation/contracts/ReputationTokensBase.sol",
        migrateBatch: "lib/reputation/contracts/ReputationTokensBase.sol",
        mint: "lib/reputation/contracts/ReputationTokensBase.sol",
        mintBatch: "lib/reputation/contracts/ReputationTokensBase.sol",
        renounceRole: "lib/reputation/contracts/ReputationTokensBase.sol",
        revokeRole: "lib/reputation/contracts/ReputationTokensBase.sol",
        safeBatchTransferFrom: "lib/reputation/contracts/ReputationTokensBase.sol",
        safeTransferFrom: "lib/reputation/contracts/ReputationTokensBase.sol",
        setApprovalForAll: "lib/reputation/contracts/ReputationTokensBase.sol",
        supportsInterface: "lib/reputation/contracts/ReputationTokensBase.sol",
        tokensByAccount: "lib/reputation/contracts/ReputationTokensBase.sol",
        totalHolders: "lib/reputation/contracts/ReputationTokensBase.sol",
        totalSupply: "lib/reputation/contracts/ReputationTokensBase.sol",
        updateToken: "lib/reputation/contracts/ReputationTokensBase.sol",
        updateTokenBatch: "lib/reputation/contracts/ReputationTokensBase.sol",
        uri: "lib/reputation/contracts/ReputationTokensBase.sol",
      },
    },
    ReputationFaucet: {
      address: "0x1aabb2da851e01963d3e3e8951685b380aca4130",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "addr",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "claim",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "onERC1155BatchReceived",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bytes4",
              internalType: "bytes4",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "onERC1155Received",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bytes4",
              internalType: "bytes4",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "supportsInterface",
          inputs: [
            {
              name: "interfaceId",
              type: "bytes4",
              internalType: "bytes4",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
      ],
      inheritedFunctions: {
        onERC1155BatchReceived: "lib/openzeppelin-contracts/contracts/token/ERC1155/utils/ERC1155Holder.sol",
        onERC1155Received: "lib/openzeppelin-contracts/contracts/token/ERC1155/utils/ERC1155Holder.sol",
        supportsInterface: "lib/openzeppelin-contracts/contracts/token/ERC1155/utils/ERC1155Holder.sol",
      },
    },
    Hats: {
      address: "0x8e4dd9a0d1b4d373f2ee758cae78a9d3b2a4958c",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "_name",
              type: "string",
              internalType: "string",
            },
            {
              name: "_baseImageURI",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "approveLinkTopHatToTree",
          inputs: [
            {
              name: "_topHatDomain",
              type: "uint32",
              internalType: "uint32",
            },
            {
              name: "_newAdminHat",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_eligibility",
              type: "address",
              internalType: "address",
            },
            {
              name: "_toggle",
              type: "address",
              internalType: "address",
            },
            {
              name: "_details",
              type: "string",
              internalType: "string",
            },
            {
              name: "_imageURI",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "badStandings",
          inputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "balanceOf",
          inputs: [
            {
              name: "_wearer",
              type: "address",
              internalType: "address",
            },
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "balance",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "balanceOfBatch",
          inputs: [
            {
              name: "_wearers",
              type: "address[]",
              internalType: "address[]",
            },
            {
              name: "_hatIds",
              type: "uint256[]",
              internalType: "uint256[]",
            },
          ],
          outputs: [
            {
              name: "balances",
              type: "uint256[]",
              internalType: "uint256[]",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "baseImageURI",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "batchCreateHats",
          inputs: [
            {
              name: "_admins",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "_details",
              type: "string[]",
              internalType: "string[]",
            },
            {
              name: "_maxSupplies",
              type: "uint32[]",
              internalType: "uint32[]",
            },
            {
              name: "_eligibilityModules",
              type: "address[]",
              internalType: "address[]",
            },
            {
              name: "_toggleModules",
              type: "address[]",
              internalType: "address[]",
            },
            {
              name: "_mutables",
              type: "bool[]",
              internalType: "bool[]",
            },
            {
              name: "_imageURIs",
              type: "string[]",
              internalType: "string[]",
            },
          ],
          outputs: [
            {
              name: "success",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "batchMintHats",
          inputs: [
            {
              name: "_hatIds",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "_wearers",
              type: "address[]",
              internalType: "address[]",
            },
          ],
          outputs: [
            {
              name: "success",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "buildHatId",
          inputs: [
            {
              name: "_admin",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_newHat",
              type: "uint16",
              internalType: "uint16",
            },
          ],
          outputs: [
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "changeHatDetails",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_newDetails",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "changeHatEligibility",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_newEligibility",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "changeHatImageURI",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_newImageURI",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "changeHatMaxSupply",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_newMaxSupply",
              type: "uint32",
              internalType: "uint32",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "changeHatToggle",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_newToggle",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "checkHatStatus",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "toggled",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "checkHatWearerStatus",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_wearer",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "updated",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "createHat",
          inputs: [
            {
              name: "_admin",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_details",
              type: "string",
              internalType: "string",
            },
            {
              name: "_maxSupply",
              type: "uint32",
              internalType: "uint32",
            },
            {
              name: "_eligibility",
              type: "address",
              internalType: "address",
            },
            {
              name: "_toggle",
              type: "address",
              internalType: "address",
            },
            {
              name: "_mutable",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "_imageURI",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [
            {
              name: "newHatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "getAdminAtLevel",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_level",
              type: "uint32",
              internalType: "uint32",
            },
          ],
          outputs: [
            {
              name: "admin",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getAdminAtLocalLevel",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_level",
              type: "uint32",
              internalType: "uint32",
            },
          ],
          outputs: [
            {
              name: "admin",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "getHatEligibilityModule",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "eligibility",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getHatLevel",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "level",
              type: "uint32",
              internalType: "uint32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getHatMaxSupply",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "maxSupply",
              type: "uint32",
              internalType: "uint32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getHatToggleModule",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "toggle",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getImageURIForHat",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "_uri",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getLocalHatLevel",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "level",
              type: "uint32",
              internalType: "uint32",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "getNextId",
          inputs: [
            {
              name: "_admin",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "nextId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getTippyTopHatDomain",
          inputs: [
            {
              name: "_topHatDomain",
              type: "uint32",
              internalType: "uint32",
            },
          ],
          outputs: [
            {
              name: "domain",
              type: "uint32",
              internalType: "uint32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getTopHatDomain",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "domain",
              type: "uint32",
              internalType: "uint32",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "hatSupply",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "supply",
              type: "uint32",
              internalType: "uint32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "isActive",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "active",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "isAdminOfHat",
          inputs: [
            {
              name: "_user",
              type: "address",
              internalType: "address",
            },
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "isAdmin",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "isApprovedForAll",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "isEligible",
          inputs: [
            {
              name: "_wearer",
              type: "address",
              internalType: "address",
            },
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "eligible",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "isInGoodStanding",
          inputs: [
            {
              name: "_wearer",
              type: "address",
              internalType: "address",
            },
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "standing",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "isLocalTopHat",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "_isLocalTopHat",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "isTopHat",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "_isTopHat",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "isValidHatId",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "validHatId",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "isWearerOfHat",
          inputs: [
            {
              name: "_user",
              type: "address",
              internalType: "address",
            },
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "isWearer",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "lastTopHatId",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint32",
              internalType: "uint32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "linkedTreeAdmins",
          inputs: [
            {
              name: "",
              type: "uint32",
              internalType: "uint32",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "linkedTreeRequests",
          inputs: [
            {
              name: "",
              type: "uint32",
              internalType: "uint32",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "makeHatImmutable",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "mintHat",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_wearer",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "success",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "mintTopHat",
          inputs: [
            {
              name: "_target",
              type: "address",
              internalType: "address",
            },
            {
              name: "_details",
              type: "string",
              internalType: "string",
            },
            {
              name: "_imageURI",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [
            {
              name: "topHatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "multicall",
          inputs: [
            {
              name: "data",
              type: "bytes[]",
              internalType: "bytes[]",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bytes[]",
              internalType: "bytes[]",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "name",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "noCircularLinkage",
          inputs: [
            {
              name: "_topHatDomain",
              type: "uint32",
              internalType: "uint32",
            },
            {
              name: "_linkedAdmin",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "notCircular",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "relinkTopHatWithinTree",
          inputs: [
            {
              name: "_topHatDomain",
              type: "uint32",
              internalType: "uint32",
            },
            {
              name: "_newAdminHat",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_eligibility",
              type: "address",
              internalType: "address",
            },
            {
              name: "_toggle",
              type: "address",
              internalType: "address",
            },
            {
              name: "_details",
              type: "string",
              internalType: "string",
            },
            {
              name: "_imageURI",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "renounceHat",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "requestLinkTopHatToTree",
          inputs: [
            {
              name: "_topHatDomain",
              type: "uint32",
              internalType: "uint32",
            },
            {
              name: "_requestedAdminHat",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "safeBatchTransferFrom",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "safeTransferFrom",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "sameTippyTopHatDomain",
          inputs: [
            {
              name: "_topHatDomain",
              type: "uint32",
              internalType: "uint32",
            },
            {
              name: "_newAdminHat",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "sameDomain",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "setApprovalForAll",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          outputs: [],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "setHatStatus",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_newStatus",
              type: "bool",
              internalType: "bool",
            },
          ],
          outputs: [
            {
              name: "toggled",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "setHatWearerStatus",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_wearer",
              type: "address",
              internalType: "address",
            },
            {
              name: "_eligible",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "_standing",
              type: "bool",
              internalType: "bool",
            },
          ],
          outputs: [
            {
              name: "updated",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "supportsInterface",
          inputs: [
            {
              name: "interfaceId",
              type: "bytes4",
              internalType: "bytes4",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "transferHat",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_from",
              type: "address",
              internalType: "address",
            },
            {
              name: "_to",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "unlinkTopHatFromTree",
          inputs: [
            {
              name: "_topHatDomain",
              type: "uint32",
              internalType: "uint32",
            },
            {
              name: "_wearer",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "uri",
          inputs: [
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "_uri",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "viewHat",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "details",
              type: "string",
              internalType: "string",
            },
            {
              name: "maxSupply",
              type: "uint32",
              internalType: "uint32",
            },
            {
              name: "supply",
              type: "uint32",
              internalType: "uint32",
            },
            {
              name: "eligibility",
              type: "address",
              internalType: "address",
            },
            {
              name: "toggle",
              type: "address",
              internalType: "address",
            },
            {
              name: "imageURI",
              type: "string",
              internalType: "string",
            },
            {
              name: "lastHatId",
              type: "uint16",
              internalType: "uint16",
            },
            {
              name: "mutable_",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "active",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "event",
          name: "ApprovalForAll",
          inputs: [
            {
              name: "owner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "operator",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "approved",
              type: "bool",
              indexed: false,
              internalType: "bool",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "HatCreated",
          inputs: [
            {
              name: "id",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "details",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "maxSupply",
              type: "uint32",
              indexed: false,
              internalType: "uint32",
            },
            {
              name: "eligibility",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "toggle",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "mutable_",
              type: "bool",
              indexed: false,
              internalType: "bool",
            },
            {
              name: "imageURI",
              type: "string",
              indexed: false,
              internalType: "string",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "HatDetailsChanged",
          inputs: [
            {
              name: "hatId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "newDetails",
              type: "string",
              indexed: false,
              internalType: "string",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "HatEligibilityChanged",
          inputs: [
            {
              name: "hatId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "newEligibility",
              type: "address",
              indexed: false,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "HatImageURIChanged",
          inputs: [
            {
              name: "hatId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "newImageURI",
              type: "string",
              indexed: false,
              internalType: "string",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "HatMaxSupplyChanged",
          inputs: [
            {
              name: "hatId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "newMaxSupply",
              type: "uint32",
              indexed: false,
              internalType: "uint32",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "HatMutabilityChanged",
          inputs: [
            {
              name: "hatId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "HatStatusChanged",
          inputs: [
            {
              name: "hatId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "newStatus",
              type: "bool",
              indexed: false,
              internalType: "bool",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "HatToggleChanged",
          inputs: [
            {
              name: "hatId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "newToggle",
              type: "address",
              indexed: false,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "TopHatLinkRequested",
          inputs: [
            {
              name: "domain",
              type: "uint32",
              indexed: false,
              internalType: "uint32",
            },
            {
              name: "newAdmin",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "TopHatLinked",
          inputs: [
            {
              name: "domain",
              type: "uint32",
              indexed: false,
              internalType: "uint32",
            },
            {
              name: "newAdmin",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "TransferBatch",
          inputs: [
            {
              name: "operator",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "ids",
              type: "uint256[]",
              indexed: false,
              internalType: "uint256[]",
            },
            {
              name: "amounts",
              type: "uint256[]",
              indexed: false,
              internalType: "uint256[]",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "TransferSingle",
          inputs: [
            {
              name: "operator",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "id",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "amount",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "URI",
          inputs: [
            {
              name: "value",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "id",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "WearerStandingChanged",
          inputs: [
            {
              name: "hatId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "wearer",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "wearerStanding",
              type: "bool",
              indexed: false,
              internalType: "bool",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "AllHatsWorn",
          inputs: [
            {
              name: "hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "AlreadyWearingHat",
          inputs: [
            {
              name: "wearer",
              type: "address",
              internalType: "address",
            },
            {
              name: "hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "BatchArrayLengthMismatch",
          inputs: [],
        },
        {
          type: "error",
          name: "CircularLinkage",
          inputs: [],
        },
        {
          type: "error",
          name: "CrossTreeLinkage",
          inputs: [],
        },
        {
          type: "error",
          name: "HatDoesNotExist",
          inputs: [
            {
              name: "hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "HatNotActive",
          inputs: [],
        },
        {
          type: "error",
          name: "Immutable",
          inputs: [],
        },
        {
          type: "error",
          name: "InvalidHatId",
          inputs: [],
        },
        {
          type: "error",
          name: "InvalidUnlink",
          inputs: [],
        },
        {
          type: "error",
          name: "LinkageNotRequested",
          inputs: [],
        },
        {
          type: "error",
          name: "MaxLevelsReached",
          inputs: [],
        },
        {
          type: "error",
          name: "MaxLevelsReached",
          inputs: [],
        },
        {
          type: "error",
          name: "NewMaxSupplyTooLow",
          inputs: [],
        },
        {
          type: "error",
          name: "NotAdmin",
          inputs: [
            {
              name: "user",
              type: "address",
              internalType: "address",
            },
            {
              name: "hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "NotAdminOrWearer",
          inputs: [],
        },
        {
          type: "error",
          name: "NotEligible",
          inputs: [],
        },
        {
          type: "error",
          name: "NotHatWearer",
          inputs: [],
        },
        {
          type: "error",
          name: "NotHatsEligibility",
          inputs: [],
        },
        {
          type: "error",
          name: "NotHatsToggle",
          inputs: [],
        },
        {
          type: "error",
          name: "StringTooLong",
          inputs: [],
        },
        {
          type: "error",
          name: "ZeroAddress",
          inputs: [],
        },
      ],
      inheritedFunctions: {
        approveLinkTopHatToTree: "contracts/Hats/Interfaces/IHats.sol",
        balanceOf: "contracts/Hats/utils/ERC1155.sol",
        balanceOfBatch: "contracts/Hats/utils/ERC1155.sol",
        batchCreateHats: "contracts/Hats/Interfaces/IHats.sol",
        batchMintHats: "contracts/Hats/Interfaces/IHats.sol",
        buildHatId: "contracts/Hats/HatsIdUtilities.sol",
        changeHatDetails: "contracts/Hats/Interfaces/IHats.sol",
        changeHatEligibility: "contracts/Hats/Interfaces/IHats.sol",
        changeHatImageURI: "contracts/Hats/Interfaces/IHats.sol",
        changeHatMaxSupply: "contracts/Hats/Interfaces/IHats.sol",
        changeHatToggle: "contracts/Hats/Interfaces/IHats.sol",
        checkHatStatus: "contracts/Hats/Interfaces/IHats.sol",
        checkHatWearerStatus: "contracts/Hats/Interfaces/IHats.sol",
        createHat: "contracts/Hats/Interfaces/IHats.sol",
        getAdminAtLevel: "contracts/Hats/HatsIdUtilities.sol",
        getAdminAtLocalLevel: "contracts/Hats/HatsIdUtilities.sol",
        getHatEligibilityModule: "contracts/Hats/Interfaces/IHats.sol",
        getHatLevel: "contracts/Hats/HatsIdUtilities.sol",
        getHatMaxSupply: "contracts/Hats/Interfaces/IHats.sol",
        getHatToggleModule: "contracts/Hats/Interfaces/IHats.sol",
        getImageURIForHat: "contracts/Hats/Interfaces/IHats.sol",
        getLocalHatLevel: "contracts/Hats/HatsIdUtilities.sol",
        getNextId: "contracts/Hats/Interfaces/IHats.sol",
        getTippyTopHatDomain: "contracts/Hats/HatsIdUtilities.sol",
        getTopHatDomain: "contracts/Hats/HatsIdUtilities.sol",
        hatSupply: "contracts/Hats/Interfaces/IHats.sol",
        isAdminOfHat: "contracts/Hats/Interfaces/IHats.sol",
        isEligible: "contracts/Hats/Interfaces/IHats.sol",
        isInGoodStanding: "contracts/Hats/Interfaces/IHats.sol",
        isLocalTopHat: "contracts/Hats/HatsIdUtilities.sol",
        isTopHat: "contracts/Hats/HatsIdUtilities.sol",
        isValidHatId: "contracts/Hats/HatsIdUtilities.sol",
        isWearerOfHat: "contracts/Hats/Interfaces/IHats.sol",
        makeHatImmutable: "contracts/Hats/Interfaces/IHats.sol",
        mintHat: "contracts/Hats/Interfaces/IHats.sol",
        mintTopHat: "contracts/Hats/Interfaces/IHats.sol",
        noCircularLinkage: "contracts/Hats/HatsIdUtilities.sol",
        relinkTopHatWithinTree: "contracts/Hats/Interfaces/IHats.sol",
        renounceHat: "contracts/Hats/Interfaces/IHats.sol",
        requestLinkTopHatToTree: "contracts/Hats/Interfaces/IHats.sol",
        sameTippyTopHatDomain: "contracts/Hats/HatsIdUtilities.sol",
        setHatStatus: "contracts/Hats/Interfaces/IHats.sol",
        setHatWearerStatus: "contracts/Hats/Interfaces/IHats.sol",
        transferHat: "contracts/Hats/Interfaces/IHats.sol",
        unlinkTopHatFromTree: "contracts/Hats/Interfaces/IHats.sol",
        uri: "contracts/Hats/utils/ERC1155.sol",
        viewHat: "contracts/Hats/Interfaces/IHats.sol",
        isApprovedForAll: "contracts/Hats/utils/ERC1155.sol",
        safeBatchTransferFrom: "contracts/Hats/utils/ERC1155.sol",
        safeTransferFrom: "contracts/Hats/utils/ERC1155.sol",
        setApprovalForAll: "contracts/Hats/utils/ERC1155.sol",
        supportsInterface: "contracts/Hats/utils/ERC1155.sol",
        multicall: "contracts/Hats/utils/Multicallable.sol",
        linkedTreeAdmins: "contracts/Hats/HatsIdUtilities.sol",
        linkedTreeRequests: "contracts/Hats/HatsIdUtilities.sol",
      },
    },
    null: {
      address: "0x23217360457092b31e63d24ecc8b51131611521a",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "erc1155Address",
              type: "address",
              internalType: "address",
            },
            {
              name: "amount",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "getWearerStatus",
          inputs: [
            {
              name: "_wearer",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "eligible",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "standing",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
      ],
      inheritedFunctions: {},
    },
    ActiveModule: {
      address: "0x1c58e8fde7238044f729f1d909bd51decb6ef70c",
      abi: [
        {
          type: "function",
          name: "getWearerStatus",
          inputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "eligible",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "standing",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "pure",
        },
      ],
      inheritedFunctions: {},
    },
    ERC1155EligibiltiyModule: {
      address: "0x6003823498fdc5fc58bc1a8b6c65dc65e6bb97cf",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "erc1155Address",
              type: "address",
              internalType: "address",
            },
            {
              name: "amount",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "getWearerStatus",
          inputs: [
            {
              name: "_wearer",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "eligible",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "standing",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
      ],
      inheritedFunctions: {},
    },
  },
  4002: {
    ReputationTokens: {
      address: "0x74f2267779e040b1e4d9fa6a890fb61b9f6e7e70",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "newOwner",
              type: "address",
              internalType: "address",
            },
            {
              name: "admins",
              type: "address[]",
              internalType: "address[]",
            },
            {
              name: "tokenUpdaters",
              type: "address[]",
              internalType: "address[]",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "MINTER_ROLE",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "TOKEN_MIGRATOR_ROLE",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "TOKEN_UPDATER_ROLE",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "accountsByToken",
          inputs: [
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "address[]",
              internalType: "address[]",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "balanceOf",
          inputs: [
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "balanceOfBatch",
          inputs: [
            {
              name: "accounts",
              type: "address[]",
              internalType: "address[]",
            },
            {
              name: "ids",
              type: "uint256[]",
              internalType: "uint256[]",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256[]",
              internalType: "uint256[]",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "burnedBalanceOf",
          inputs: [
            {
              name: "addr",
              type: "address",
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "burnedBalance",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "distributableBalanceOf",
          inputs: [
            {
              name: "addr",
              type: "address",
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "distributableBalance",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "distribute",
          inputs: [
            {
              name: "from",
              type: "address",
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "value",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "data",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "distributeBatch",
          inputs: [
            {
              name: "from",
              type: "address",
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "ids",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "values",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "data",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "getRoleAdmin",
          inputs: [
            {
              name: "role",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getRoleMember",
          inputs: [
            {
              name: "role",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "index",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getRoleMemberCount",
          inputs: [
            {
              name: "role",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getTokenType",
          inputs: [
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint8",
              internalType: "enum IReputationTokensTypes.TokenType",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "grantRole",
          inputs: [
            {
              name: "role",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "hasRole",
          inputs: [
            {
              name: "role",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "honestBalanceOf",
          inputs: [
            {
              name: "addr",
              type: "address",
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "transferrableBalance",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "isApprovedForAll",
          inputs: [
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
            {
              name: "operator",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "migrate",
          inputs: [
            {
              name: "from",
              type: "address",
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "value",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "data",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "migrateBatch",
          inputs: [
            {
              name: "from",
              type: "address",
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "ids",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "values",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "data",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "mint",
          inputs: [
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "value",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "data",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "mintBatch",
          inputs: [
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "ids",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "values",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "data",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "owner",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "renounceRole",
          inputs: [
            {
              name: "role",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "revokeRole",
          inputs: [
            {
              name: "role",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "safeBatchTransferFrom",
          inputs: [
            {
              name: "from",
              type: "address",
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "ids",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "values",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "data",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "safeTransferFrom",
          inputs: [
            {
              name: "from",
              type: "address",
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "value",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "data",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "setApprovalForAll",
          inputs: [
            {
              name: "operator",
              type: "address",
              internalType: "address",
            },
            {
              name: "status",
              type: "bool",
              internalType: "bool",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "supportsInterface",
          inputs: [
            {
              name: "interfaceId",
              type: "bytes4",
              internalType: "bytes4",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "tokensByAccount",
          inputs: [
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256[]",
              internalType: "uint256[]",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "totalHolders",
          inputs: [
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "totalSupply",
          inputs: [
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "transferOwnership",
          inputs: [
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "updateToken",
          inputs: [
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "tokenType",
              type: "uint8",
              internalType: "enum IReputationTokensTypes.TokenType",
            },
            {
              name: "uri",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "updateTokenBatch",
          inputs: [
            {
              name: "ids",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "tokenTypes",
              type: "uint8[]",
              internalType: "enum IReputationTokensTypes.TokenType[]",
            },
            {
              name: "uris",
              type: "string[]",
              internalType: "string[]",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "uri",
          inputs: [
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "event",
          name: "ApprovalForAll",
          inputs: [
            {
              name: "account",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "operator",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "approved",
              type: "bool",
              indexed: false,
              internalType: "bool",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Create",
          inputs: [
            {
              name: "tokenId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Distribute",
          inputs: [
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "value",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "DistributeBatch",
          inputs: [
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256[]",
              indexed: false,
              internalType: "uint256[]",
            },
            {
              name: "value",
              type: "uint256[]",
              indexed: false,
              internalType: "uint256[]",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Migrate",
          inputs: [
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "id",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "value",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "MigrateBatch",
          inputs: [
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "ids",
              type: "uint256[]",
              indexed: false,
              internalType: "uint256[]",
            },
            {
              name: "values",
              type: "uint256[]",
              indexed: false,
              internalType: "uint256[]",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Mint",
          inputs: [
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "value",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "MintBatch",
          inputs: [
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "tokenIds",
              type: "uint256[]",
              indexed: false,
              internalType: "uint256[]",
            },
            {
              name: "values",
              type: "uint256[]",
              indexed: false,
              internalType: "uint256[]",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "OwnershipTransferred",
          inputs: [
            {
              name: "previousOwner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "newOwner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "RoleAdminChanged",
          inputs: [
            {
              name: "role",
              type: "bytes32",
              indexed: true,
              internalType: "bytes32",
            },
            {
              name: "previousAdminRole",
              type: "bytes32",
              indexed: true,
              internalType: "bytes32",
            },
            {
              name: "newAdminRole",
              type: "bytes32",
              indexed: true,
              internalType: "bytes32",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "RoleGranted",
          inputs: [
            {
              name: "role",
              type: "bytes32",
              indexed: true,
              internalType: "bytes32",
            },
            {
              name: "account",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "sender",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "RoleRevoked",
          inputs: [
            {
              name: "role",
              type: "bytes32",
              indexed: true,
              internalType: "bytes32",
            },
            {
              name: "account",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "sender",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "TransferBatch",
          inputs: [
            {
              name: "operator",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "ids",
              type: "uint256[]",
              indexed: false,
              internalType: "uint256[]",
            },
            {
              name: "values",
              type: "uint256[]",
              indexed: false,
              internalType: "uint256[]",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "TransferSingle",
          inputs: [
            {
              name: "operator",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "id",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "value",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "URI",
          inputs: [
            {
              name: "value",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "tokenId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Update",
          inputs: [
            {
              name: "tokenId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "tokenType",
              type: "uint8",
              indexed: true,
              internalType: "enum IReputationTokensTypes.TokenType",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "UpdateBatch",
          inputs: [
            {
              name: "tokenId",
              type: "uint256[]",
              indexed: true,
              internalType: "uint256[]",
            },
            {
              name: "tokenType",
              type: "uint8[]",
              indexed: true,
              internalType: "enum IReputationTokensTypes.TokenType[]",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "ERC1155Base__ArrayLengthMismatch",
          inputs: [],
        },
        {
          type: "error",
          name: "ERC1155Base__BalanceQueryZeroAddress",
          inputs: [],
        },
        {
          type: "error",
          name: "ERC1155Base__BurnExceedsBalance",
          inputs: [],
        },
        {
          type: "error",
          name: "ERC1155Base__BurnFromZeroAddress",
          inputs: [],
        },
        {
          type: "error",
          name: "ERC1155Base__ERC1155ReceiverNotImplemented",
          inputs: [],
        },
        {
          type: "error",
          name: "ERC1155Base__ERC1155ReceiverRejected",
          inputs: [],
        },
        {
          type: "error",
          name: "ERC1155Base__MintToZeroAddress",
          inputs: [],
        },
        {
          type: "error",
          name: "ERC1155Base__NotOwnerOrApproved",
          inputs: [],
        },
        {
          type: "error",
          name: "ERC1155Base__SelfApproval",
          inputs: [],
        },
        {
          type: "error",
          name: "ERC1155Base__TransferExceedsBalance",
          inputs: [],
        },
        {
          type: "error",
          name: "ERC1155Base__TransferToZeroAddress",
          inputs: [],
        },
        {
          type: "error",
          name: "ERC165Base__InvalidInterfaceId",
          inputs: [],
        },
        {
          type: "error",
          name: "EnumerableSet__IndexOutOfBounds",
          inputs: [],
        },
        {
          type: "error",
          name: "Ownable__NotOwner",
          inputs: [],
        },
        {
          type: "error",
          name: "Ownable__NotTransitiveOwner",
          inputs: [],
        },
        {
          type: "error",
          name: "ReputationTokens__CannotTransferSoulboundToken",
          inputs: [],
        },
        {
          type: "error",
          name: "ReputationTokens__InsufficientBalance",
          inputs: [],
        },
        {
          type: "error",
          name: "UintUtils__InsufficientPadding",
          inputs: [],
        },
        {
          type: "error",
          name: "UintUtils__InvalidBase",
          inputs: [],
        },
      ],
      inheritedFunctions: {
        owner: "lib/reputation/lib/solidstate-solidity/contracts/access/ownable/Ownable.sol",
        transferOwnership: "lib/reputation/lib/solidstate-solidity/contracts/access/ownable/Ownable.sol",
        MINTER_ROLE: "lib/reputation/contracts/ReputationTokensBase.sol",
        TOKEN_MIGRATOR_ROLE: "lib/reputation/contracts/ReputationTokensBase.sol",
        TOKEN_UPDATER_ROLE: "lib/reputation/contracts/ReputationTokensBase.sol",
        accountsByToken: "lib/reputation/contracts/ReputationTokensBase.sol",
        balanceOf: "lib/reputation/contracts/ReputationTokensBase.sol",
        balanceOfBatch: "lib/reputation/contracts/ReputationTokensBase.sol",
        burnedBalanceOf: "lib/reputation/contracts/ReputationTokensBase.sol",
        distributableBalanceOf: "lib/reputation/contracts/ReputationTokensBase.sol",
        distribute: "lib/reputation/contracts/ReputationTokensBase.sol",
        distributeBatch: "lib/reputation/contracts/ReputationTokensBase.sol",
        getRoleAdmin: "lib/reputation/contracts/ReputationTokensBase.sol",
        getRoleMember: "lib/reputation/contracts/ReputationTokensBase.sol",
        getRoleMemberCount: "lib/reputation/contracts/ReputationTokensBase.sol",
        getTokenType: "lib/reputation/contracts/ReputationTokensBase.sol",
        grantRole: "lib/reputation/contracts/ReputationTokensBase.sol",
        hasRole: "lib/reputation/contracts/ReputationTokensBase.sol",
        honestBalanceOf: "lib/reputation/contracts/ReputationTokensBase.sol",
        isApprovedForAll: "lib/reputation/contracts/ReputationTokensBase.sol",
        migrate: "lib/reputation/contracts/ReputationTokensBase.sol",
        migrateBatch: "lib/reputation/contracts/ReputationTokensBase.sol",
        mint: "lib/reputation/contracts/ReputationTokensBase.sol",
        mintBatch: "lib/reputation/contracts/ReputationTokensBase.sol",
        renounceRole: "lib/reputation/contracts/ReputationTokensBase.sol",
        revokeRole: "lib/reputation/contracts/ReputationTokensBase.sol",
        safeBatchTransferFrom: "lib/reputation/contracts/ReputationTokensBase.sol",
        safeTransferFrom: "lib/reputation/contracts/ReputationTokensBase.sol",
        setApprovalForAll: "lib/reputation/contracts/ReputationTokensBase.sol",
        supportsInterface: "lib/reputation/contracts/ReputationTokensBase.sol",
        tokensByAccount: "lib/reputation/contracts/ReputationTokensBase.sol",
        totalHolders: "lib/reputation/contracts/ReputationTokensBase.sol",
        totalSupply: "lib/reputation/contracts/ReputationTokensBase.sol",
        updateToken: "lib/reputation/contracts/ReputationTokensBase.sol",
        updateTokenBatch: "lib/reputation/contracts/ReputationTokensBase.sol",
        uri: "lib/reputation/contracts/ReputationTokensBase.sol",
      },
    },
    ReputationFaucet: {
      address: "0xa32c551968fe8225eaefa9d0e0b40a3d30e9acbe",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "addr",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "claim",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "onERC1155BatchReceived",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bytes4",
              internalType: "bytes4",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "onERC1155Received",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bytes4",
              internalType: "bytes4",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "supportsInterface",
          inputs: [
            {
              name: "interfaceId",
              type: "bytes4",
              internalType: "bytes4",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
      ],
      inheritedFunctions: {
        onERC1155BatchReceived: "lib/openzeppelin-contracts/contracts/token/ERC1155/utils/ERC1155Holder.sol",
        onERC1155Received: "lib/openzeppelin-contracts/contracts/token/ERC1155/utils/ERC1155Holder.sol",
        supportsInterface: "lib/openzeppelin-contracts/contracts/token/ERC1155/utils/ERC1155Holder.sol",
      },
    },
    Hats: {
      address: "0x87d8fc0c7b465cddfae0e987d72be56aa4691e74",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "_name",
              type: "string",
              internalType: "string",
            },
            {
              name: "_baseImageURI",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "approveLinkTopHatToTree",
          inputs: [
            {
              name: "_topHatDomain",
              type: "uint32",
              internalType: "uint32",
            },
            {
              name: "_newAdminHat",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_eligibility",
              type: "address",
              internalType: "address",
            },
            {
              name: "_toggle",
              type: "address",
              internalType: "address",
            },
            {
              name: "_details",
              type: "string",
              internalType: "string",
            },
            {
              name: "_imageURI",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "badStandings",
          inputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "balanceOf",
          inputs: [
            {
              name: "_wearer",
              type: "address",
              internalType: "address",
            },
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "balance",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "balanceOfBatch",
          inputs: [
            {
              name: "_wearers",
              type: "address[]",
              internalType: "address[]",
            },
            {
              name: "_hatIds",
              type: "uint256[]",
              internalType: "uint256[]",
            },
          ],
          outputs: [
            {
              name: "balances",
              type: "uint256[]",
              internalType: "uint256[]",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "baseImageURI",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "batchCreateHats",
          inputs: [
            {
              name: "_admins",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "_details",
              type: "string[]",
              internalType: "string[]",
            },
            {
              name: "_maxSupplies",
              type: "uint32[]",
              internalType: "uint32[]",
            },
            {
              name: "_eligibilityModules",
              type: "address[]",
              internalType: "address[]",
            },
            {
              name: "_toggleModules",
              type: "address[]",
              internalType: "address[]",
            },
            {
              name: "_mutables",
              type: "bool[]",
              internalType: "bool[]",
            },
            {
              name: "_imageURIs",
              type: "string[]",
              internalType: "string[]",
            },
          ],
          outputs: [
            {
              name: "success",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "batchMintHats",
          inputs: [
            {
              name: "_hatIds",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "_wearers",
              type: "address[]",
              internalType: "address[]",
            },
          ],
          outputs: [
            {
              name: "success",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "buildHatId",
          inputs: [
            {
              name: "_admin",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_newHat",
              type: "uint16",
              internalType: "uint16",
            },
          ],
          outputs: [
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "changeHatDetails",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_newDetails",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "changeHatEligibility",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_newEligibility",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "changeHatImageURI",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_newImageURI",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "changeHatMaxSupply",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_newMaxSupply",
              type: "uint32",
              internalType: "uint32",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "changeHatToggle",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_newToggle",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "checkHatStatus",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "toggled",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "checkHatWearerStatus",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_wearer",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "updated",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "createHat",
          inputs: [
            {
              name: "_admin",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_details",
              type: "string",
              internalType: "string",
            },
            {
              name: "_maxSupply",
              type: "uint32",
              internalType: "uint32",
            },
            {
              name: "_eligibility",
              type: "address",
              internalType: "address",
            },
            {
              name: "_toggle",
              type: "address",
              internalType: "address",
            },
            {
              name: "_mutable",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "_imageURI",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [
            {
              name: "newHatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "getAdminAtLevel",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_level",
              type: "uint32",
              internalType: "uint32",
            },
          ],
          outputs: [
            {
              name: "admin",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getAdminAtLocalLevel",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_level",
              type: "uint32",
              internalType: "uint32",
            },
          ],
          outputs: [
            {
              name: "admin",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "getHatEligibilityModule",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "eligibility",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getHatLevel",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "level",
              type: "uint32",
              internalType: "uint32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getHatMaxSupply",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "maxSupply",
              type: "uint32",
              internalType: "uint32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getHatToggleModule",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "toggle",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getImageURIForHat",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "_uri",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getLocalHatLevel",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "level",
              type: "uint32",
              internalType: "uint32",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "getNextId",
          inputs: [
            {
              name: "_admin",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "nextId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getTippyTopHatDomain",
          inputs: [
            {
              name: "_topHatDomain",
              type: "uint32",
              internalType: "uint32",
            },
          ],
          outputs: [
            {
              name: "domain",
              type: "uint32",
              internalType: "uint32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getTopHatDomain",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "domain",
              type: "uint32",
              internalType: "uint32",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "hatSupply",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "supply",
              type: "uint32",
              internalType: "uint32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "isActive",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "active",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "isAdminOfHat",
          inputs: [
            {
              name: "_user",
              type: "address",
              internalType: "address",
            },
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "isAdmin",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "isApprovedForAll",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "isEligible",
          inputs: [
            {
              name: "_wearer",
              type: "address",
              internalType: "address",
            },
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "eligible",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "isInGoodStanding",
          inputs: [
            {
              name: "_wearer",
              type: "address",
              internalType: "address",
            },
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "standing",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "isLocalTopHat",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "_isLocalTopHat",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "isTopHat",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "_isTopHat",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "isValidHatId",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "validHatId",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "isWearerOfHat",
          inputs: [
            {
              name: "_user",
              type: "address",
              internalType: "address",
            },
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "isWearer",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "lastTopHatId",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint32",
              internalType: "uint32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "linkedTreeAdmins",
          inputs: [
            {
              name: "",
              type: "uint32",
              internalType: "uint32",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "linkedTreeRequests",
          inputs: [
            {
              name: "",
              type: "uint32",
              internalType: "uint32",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "makeHatImmutable",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "mintHat",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_wearer",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "success",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "mintTopHat",
          inputs: [
            {
              name: "_target",
              type: "address",
              internalType: "address",
            },
            {
              name: "_details",
              type: "string",
              internalType: "string",
            },
            {
              name: "_imageURI",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [
            {
              name: "topHatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "multicall",
          inputs: [
            {
              name: "data",
              type: "bytes[]",
              internalType: "bytes[]",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bytes[]",
              internalType: "bytes[]",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "name",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "noCircularLinkage",
          inputs: [
            {
              name: "_topHatDomain",
              type: "uint32",
              internalType: "uint32",
            },
            {
              name: "_linkedAdmin",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "notCircular",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "relinkTopHatWithinTree",
          inputs: [
            {
              name: "_topHatDomain",
              type: "uint32",
              internalType: "uint32",
            },
            {
              name: "_newAdminHat",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_eligibility",
              type: "address",
              internalType: "address",
            },
            {
              name: "_toggle",
              type: "address",
              internalType: "address",
            },
            {
              name: "_details",
              type: "string",
              internalType: "string",
            },
            {
              name: "_imageURI",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "renounceHat",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "requestLinkTopHatToTree",
          inputs: [
            {
              name: "_topHatDomain",
              type: "uint32",
              internalType: "uint32",
            },
            {
              name: "_requestedAdminHat",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "safeBatchTransferFrom",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "safeTransferFrom",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "sameTippyTopHatDomain",
          inputs: [
            {
              name: "_topHatDomain",
              type: "uint32",
              internalType: "uint32",
            },
            {
              name: "_newAdminHat",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "sameDomain",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "setApprovalForAll",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          outputs: [],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "setHatStatus",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_newStatus",
              type: "bool",
              internalType: "bool",
            },
          ],
          outputs: [
            {
              name: "toggled",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "setHatWearerStatus",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_wearer",
              type: "address",
              internalType: "address",
            },
            {
              name: "_eligible",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "_standing",
              type: "bool",
              internalType: "bool",
            },
          ],
          outputs: [
            {
              name: "updated",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "supportsInterface",
          inputs: [
            {
              name: "interfaceId",
              type: "bytes4",
              internalType: "bytes4",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "transferHat",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_from",
              type: "address",
              internalType: "address",
            },
            {
              name: "_to",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "unlinkTopHatFromTree",
          inputs: [
            {
              name: "_topHatDomain",
              type: "uint32",
              internalType: "uint32",
            },
            {
              name: "_wearer",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "uri",
          inputs: [
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "_uri",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "viewHat",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "details",
              type: "string",
              internalType: "string",
            },
            {
              name: "maxSupply",
              type: "uint32",
              internalType: "uint32",
            },
            {
              name: "supply",
              type: "uint32",
              internalType: "uint32",
            },
            {
              name: "eligibility",
              type: "address",
              internalType: "address",
            },
            {
              name: "toggle",
              type: "address",
              internalType: "address",
            },
            {
              name: "imageURI",
              type: "string",
              internalType: "string",
            },
            {
              name: "lastHatId",
              type: "uint16",
              internalType: "uint16",
            },
            {
              name: "mutable_",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "active",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "event",
          name: "ApprovalForAll",
          inputs: [
            {
              name: "owner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "operator",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "approved",
              type: "bool",
              indexed: false,
              internalType: "bool",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "HatCreated",
          inputs: [
            {
              name: "id",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "details",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "maxSupply",
              type: "uint32",
              indexed: false,
              internalType: "uint32",
            },
            {
              name: "eligibility",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "toggle",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "mutable_",
              type: "bool",
              indexed: false,
              internalType: "bool",
            },
            {
              name: "imageURI",
              type: "string",
              indexed: false,
              internalType: "string",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "HatDetailsChanged",
          inputs: [
            {
              name: "hatId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "newDetails",
              type: "string",
              indexed: false,
              internalType: "string",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "HatEligibilityChanged",
          inputs: [
            {
              name: "hatId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "newEligibility",
              type: "address",
              indexed: false,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "HatImageURIChanged",
          inputs: [
            {
              name: "hatId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "newImageURI",
              type: "string",
              indexed: false,
              internalType: "string",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "HatMaxSupplyChanged",
          inputs: [
            {
              name: "hatId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "newMaxSupply",
              type: "uint32",
              indexed: false,
              internalType: "uint32",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "HatMutabilityChanged",
          inputs: [
            {
              name: "hatId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "HatStatusChanged",
          inputs: [
            {
              name: "hatId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "newStatus",
              type: "bool",
              indexed: false,
              internalType: "bool",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "HatToggleChanged",
          inputs: [
            {
              name: "hatId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "newToggle",
              type: "address",
              indexed: false,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "TopHatLinkRequested",
          inputs: [
            {
              name: "domain",
              type: "uint32",
              indexed: false,
              internalType: "uint32",
            },
            {
              name: "newAdmin",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "TopHatLinked",
          inputs: [
            {
              name: "domain",
              type: "uint32",
              indexed: false,
              internalType: "uint32",
            },
            {
              name: "newAdmin",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "TransferBatch",
          inputs: [
            {
              name: "operator",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "ids",
              type: "uint256[]",
              indexed: false,
              internalType: "uint256[]",
            },
            {
              name: "amounts",
              type: "uint256[]",
              indexed: false,
              internalType: "uint256[]",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "TransferSingle",
          inputs: [
            {
              name: "operator",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "id",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "amount",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "URI",
          inputs: [
            {
              name: "value",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "id",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "WearerStandingChanged",
          inputs: [
            {
              name: "hatId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "wearer",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "wearerStanding",
              type: "bool",
              indexed: false,
              internalType: "bool",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "AllHatsWorn",
          inputs: [
            {
              name: "hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "AlreadyWearingHat",
          inputs: [
            {
              name: "wearer",
              type: "address",
              internalType: "address",
            },
            {
              name: "hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "BatchArrayLengthMismatch",
          inputs: [],
        },
        {
          type: "error",
          name: "CircularLinkage",
          inputs: [],
        },
        {
          type: "error",
          name: "CrossTreeLinkage",
          inputs: [],
        },
        {
          type: "error",
          name: "HatDoesNotExist",
          inputs: [
            {
              name: "hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "HatNotActive",
          inputs: [],
        },
        {
          type: "error",
          name: "Immutable",
          inputs: [],
        },
        {
          type: "error",
          name: "InvalidHatId",
          inputs: [],
        },
        {
          type: "error",
          name: "InvalidUnlink",
          inputs: [],
        },
        {
          type: "error",
          name: "LinkageNotRequested",
          inputs: [],
        },
        {
          type: "error",
          name: "MaxLevelsReached",
          inputs: [],
        },
        {
          type: "error",
          name: "MaxLevelsReached",
          inputs: [],
        },
        {
          type: "error",
          name: "NewMaxSupplyTooLow",
          inputs: [],
        },
        {
          type: "error",
          name: "NotAdmin",
          inputs: [
            {
              name: "user",
              type: "address",
              internalType: "address",
            },
            {
              name: "hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "NotAdminOrWearer",
          inputs: [],
        },
        {
          type: "error",
          name: "NotEligible",
          inputs: [],
        },
        {
          type: "error",
          name: "NotHatWearer",
          inputs: [],
        },
        {
          type: "error",
          name: "NotHatsEligibility",
          inputs: [],
        },
        {
          type: "error",
          name: "NotHatsToggle",
          inputs: [],
        },
        {
          type: "error",
          name: "StringTooLong",
          inputs: [],
        },
        {
          type: "error",
          name: "ZeroAddress",
          inputs: [],
        },
      ],
      inheritedFunctions: {
        approveLinkTopHatToTree: "contracts/Hats/Interfaces/IHats.sol",
        balanceOf: "contracts/Hats/utils/ERC1155.sol",
        balanceOfBatch: "contracts/Hats/utils/ERC1155.sol",
        batchCreateHats: "contracts/Hats/Interfaces/IHats.sol",
        batchMintHats: "contracts/Hats/Interfaces/IHats.sol",
        buildHatId: "contracts/Hats/HatsIdUtilities.sol",
        changeHatDetails: "contracts/Hats/Interfaces/IHats.sol",
        changeHatEligibility: "contracts/Hats/Interfaces/IHats.sol",
        changeHatImageURI: "contracts/Hats/Interfaces/IHats.sol",
        changeHatMaxSupply: "contracts/Hats/Interfaces/IHats.sol",
        changeHatToggle: "contracts/Hats/Interfaces/IHats.sol",
        checkHatStatus: "contracts/Hats/Interfaces/IHats.sol",
        checkHatWearerStatus: "contracts/Hats/Interfaces/IHats.sol",
        createHat: "contracts/Hats/Interfaces/IHats.sol",
        getAdminAtLevel: "contracts/Hats/HatsIdUtilities.sol",
        getAdminAtLocalLevel: "contracts/Hats/HatsIdUtilities.sol",
        getHatEligibilityModule: "contracts/Hats/Interfaces/IHats.sol",
        getHatLevel: "contracts/Hats/HatsIdUtilities.sol",
        getHatMaxSupply: "contracts/Hats/Interfaces/IHats.sol",
        getHatToggleModule: "contracts/Hats/Interfaces/IHats.sol",
        getImageURIForHat: "contracts/Hats/Interfaces/IHats.sol",
        getLocalHatLevel: "contracts/Hats/HatsIdUtilities.sol",
        getNextId: "contracts/Hats/Interfaces/IHats.sol",
        getTippyTopHatDomain: "contracts/Hats/HatsIdUtilities.sol",
        getTopHatDomain: "contracts/Hats/HatsIdUtilities.sol",
        hatSupply: "contracts/Hats/Interfaces/IHats.sol",
        isAdminOfHat: "contracts/Hats/Interfaces/IHats.sol",
        isEligible: "contracts/Hats/Interfaces/IHats.sol",
        isInGoodStanding: "contracts/Hats/Interfaces/IHats.sol",
        isLocalTopHat: "contracts/Hats/HatsIdUtilities.sol",
        isTopHat: "contracts/Hats/HatsIdUtilities.sol",
        isValidHatId: "contracts/Hats/HatsIdUtilities.sol",
        isWearerOfHat: "contracts/Hats/Interfaces/IHats.sol",
        makeHatImmutable: "contracts/Hats/Interfaces/IHats.sol",
        mintHat: "contracts/Hats/Interfaces/IHats.sol",
        mintTopHat: "contracts/Hats/Interfaces/IHats.sol",
        noCircularLinkage: "contracts/Hats/HatsIdUtilities.sol",
        relinkTopHatWithinTree: "contracts/Hats/Interfaces/IHats.sol",
        renounceHat: "contracts/Hats/Interfaces/IHats.sol",
        requestLinkTopHatToTree: "contracts/Hats/Interfaces/IHats.sol",
        sameTippyTopHatDomain: "contracts/Hats/HatsIdUtilities.sol",
        setHatStatus: "contracts/Hats/Interfaces/IHats.sol",
        setHatWearerStatus: "contracts/Hats/Interfaces/IHats.sol",
        transferHat: "contracts/Hats/Interfaces/IHats.sol",
        unlinkTopHatFromTree: "contracts/Hats/Interfaces/IHats.sol",
        uri: "contracts/Hats/utils/ERC1155.sol",
        viewHat: "contracts/Hats/Interfaces/IHats.sol",
        isApprovedForAll: "contracts/Hats/utils/ERC1155.sol",
        safeBatchTransferFrom: "contracts/Hats/utils/ERC1155.sol",
        safeTransferFrom: "contracts/Hats/utils/ERC1155.sol",
        setApprovalForAll: "contracts/Hats/utils/ERC1155.sol",
        supportsInterface: "contracts/Hats/utils/ERC1155.sol",
        multicall: "contracts/Hats/utils/Multicallable.sol",
        linkedTreeAdmins: "contracts/Hats/HatsIdUtilities.sol",
        linkedTreeRequests: "contracts/Hats/HatsIdUtilities.sol",
      },
    },
    null: {
      address: "0x2619e89fc708ce8980738dc247010e9465bb996f",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "erc1155Address",
              type: "address",
              internalType: "address",
            },
            {
              name: "amount",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "getWearerStatus",
          inputs: [
            {
              name: "_wearer",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "eligible",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "standing",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
      ],
      inheritedFunctions: {},
    },
    ActiveModule: {
      address: "0xc0e41e78301880eeae4a55bf95c203e95e5715bc",
      abi: [
        {
          type: "function",
          name: "getWearerStatus",
          inputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "eligible",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "standing",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "pure",
        },
      ],
      inheritedFunctions: {},
    },
    ERC1155EligibiltiyModule: {
      address: "0x9b24fc7a0031b8cee251aacb1cd6cb34effe3348",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "erc1155Address",
              type: "address",
              internalType: "address",
            },
            {
              name: "amount",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "getWearerStatus",
          inputs: [
            {
              name: "_wearer",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "eligible",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "standing",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
      ],
      inheritedFunctions: {},
    },
  },
  31337: {
    ReputationTokens: {
      address: "0x045857bdeae7c1c7252d611eb24eb55564198b4c",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "newOwner",
              type: "address",
              internalType: "address",
            },
            {
              name: "admins",
              type: "address[]",
              internalType: "address[]",
            },
            {
              name: "tokenUpdaters",
              type: "address[]",
              internalType: "address[]",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "MINTER_ROLE",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "TOKEN_MIGRATOR_ROLE",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "TOKEN_UPDATER_ROLE",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "accountsByToken",
          inputs: [
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "address[]",
              internalType: "address[]",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "balanceOf",
          inputs: [
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "balanceOfBatch",
          inputs: [
            {
              name: "accounts",
              type: "address[]",
              internalType: "address[]",
            },
            {
              name: "ids",
              type: "uint256[]",
              internalType: "uint256[]",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256[]",
              internalType: "uint256[]",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "burnedBalanceOf",
          inputs: [
            {
              name: "addr",
              type: "address",
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "burnedBalance",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "distributableBalanceOf",
          inputs: [
            {
              name: "addr",
              type: "address",
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "distributableBalance",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "distribute",
          inputs: [
            {
              name: "from",
              type: "address",
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "value",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "data",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "distributeBatch",
          inputs: [
            {
              name: "from",
              type: "address",
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "ids",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "values",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "data",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "getRoleAdmin",
          inputs: [
            {
              name: "role",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getRoleMember",
          inputs: [
            {
              name: "role",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "index",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getRoleMemberCount",
          inputs: [
            {
              name: "role",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getTokenType",
          inputs: [
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint8",
              internalType: "enum IReputationTokensTypes.TokenType",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "grantRole",
          inputs: [
            {
              name: "role",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "hasRole",
          inputs: [
            {
              name: "role",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "honestBalanceOf",
          inputs: [
            {
              name: "addr",
              type: "address",
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "transferrableBalance",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "isApprovedForAll",
          inputs: [
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
            {
              name: "operator",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "migrate",
          inputs: [
            {
              name: "from",
              type: "address",
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "value",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "data",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "migrateBatch",
          inputs: [
            {
              name: "from",
              type: "address",
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "ids",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "values",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "data",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "mint",
          inputs: [
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "value",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "data",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "mintBatch",
          inputs: [
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "ids",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "values",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "data",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "owner",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "renounceRole",
          inputs: [
            {
              name: "role",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "revokeRole",
          inputs: [
            {
              name: "role",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "safeBatchTransferFrom",
          inputs: [
            {
              name: "from",
              type: "address",
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "ids",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "values",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "data",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "safeTransferFrom",
          inputs: [
            {
              name: "from",
              type: "address",
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "value",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "data",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "setApprovalForAll",
          inputs: [
            {
              name: "operator",
              type: "address",
              internalType: "address",
            },
            {
              name: "status",
              type: "bool",
              internalType: "bool",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "supportsInterface",
          inputs: [
            {
              name: "interfaceId",
              type: "bytes4",
              internalType: "bytes4",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "tokensByAccount",
          inputs: [
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256[]",
              internalType: "uint256[]",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "totalHolders",
          inputs: [
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "totalSupply",
          inputs: [
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "transferOwnership",
          inputs: [
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "updateToken",
          inputs: [
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "tokenType",
              type: "uint8",
              internalType: "enum IReputationTokensTypes.TokenType",
            },
            {
              name: "uri",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "updateTokenBatch",
          inputs: [
            {
              name: "ids",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "tokenTypes",
              type: "uint8[]",
              internalType: "enum IReputationTokensTypes.TokenType[]",
            },
            {
              name: "uris",
              type: "string[]",
              internalType: "string[]",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "uri",
          inputs: [
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "event",
          name: "ApprovalForAll",
          inputs: [
            {
              name: "account",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "operator",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "approved",
              type: "bool",
              indexed: false,
              internalType: "bool",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Create",
          inputs: [
            {
              name: "tokenId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Distribute",
          inputs: [
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "value",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "DistributeBatch",
          inputs: [
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256[]",
              indexed: false,
              internalType: "uint256[]",
            },
            {
              name: "value",
              type: "uint256[]",
              indexed: false,
              internalType: "uint256[]",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Migrate",
          inputs: [
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "id",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "value",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "MigrateBatch",
          inputs: [
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "ids",
              type: "uint256[]",
              indexed: false,
              internalType: "uint256[]",
            },
            {
              name: "values",
              type: "uint256[]",
              indexed: false,
              internalType: "uint256[]",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Mint",
          inputs: [
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "value",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "MintBatch",
          inputs: [
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "tokenIds",
              type: "uint256[]",
              indexed: false,
              internalType: "uint256[]",
            },
            {
              name: "values",
              type: "uint256[]",
              indexed: false,
              internalType: "uint256[]",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "OwnershipTransferred",
          inputs: [
            {
              name: "previousOwner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "newOwner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "RoleAdminChanged",
          inputs: [
            {
              name: "role",
              type: "bytes32",
              indexed: true,
              internalType: "bytes32",
            },
            {
              name: "previousAdminRole",
              type: "bytes32",
              indexed: true,
              internalType: "bytes32",
            },
            {
              name: "newAdminRole",
              type: "bytes32",
              indexed: true,
              internalType: "bytes32",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "RoleGranted",
          inputs: [
            {
              name: "role",
              type: "bytes32",
              indexed: true,
              internalType: "bytes32",
            },
            {
              name: "account",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "sender",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "RoleRevoked",
          inputs: [
            {
              name: "role",
              type: "bytes32",
              indexed: true,
              internalType: "bytes32",
            },
            {
              name: "account",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "sender",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "TransferBatch",
          inputs: [
            {
              name: "operator",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "ids",
              type: "uint256[]",
              indexed: false,
              internalType: "uint256[]",
            },
            {
              name: "values",
              type: "uint256[]",
              indexed: false,
              internalType: "uint256[]",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "TransferSingle",
          inputs: [
            {
              name: "operator",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "id",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "value",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "URI",
          inputs: [
            {
              name: "value",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "tokenId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Update",
          inputs: [
            {
              name: "tokenId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "tokenType",
              type: "uint8",
              indexed: true,
              internalType: "enum IReputationTokensTypes.TokenType",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "UpdateBatch",
          inputs: [
            {
              name: "tokenId",
              type: "uint256[]",
              indexed: true,
              internalType: "uint256[]",
            },
            {
              name: "tokenType",
              type: "uint8[]",
              indexed: true,
              internalType: "enum IReputationTokensTypes.TokenType[]",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "ERC1155Base__ArrayLengthMismatch",
          inputs: [],
        },
        {
          type: "error",
          name: "ERC1155Base__BalanceQueryZeroAddress",
          inputs: [],
        },
        {
          type: "error",
          name: "ERC1155Base__BurnExceedsBalance",
          inputs: [],
        },
        {
          type: "error",
          name: "ERC1155Base__BurnFromZeroAddress",
          inputs: [],
        },
        {
          type: "error",
          name: "ERC1155Base__ERC1155ReceiverNotImplemented",
          inputs: [],
        },
        {
          type: "error",
          name: "ERC1155Base__ERC1155ReceiverRejected",
          inputs: [],
        },
        {
          type: "error",
          name: "ERC1155Base__MintToZeroAddress",
          inputs: [],
        },
        {
          type: "error",
          name: "ERC1155Base__NotOwnerOrApproved",
          inputs: [],
        },
        {
          type: "error",
          name: "ERC1155Base__SelfApproval",
          inputs: [],
        },
        {
          type: "error",
          name: "ERC1155Base__TransferExceedsBalance",
          inputs: [],
        },
        {
          type: "error",
          name: "ERC1155Base__TransferToZeroAddress",
          inputs: [],
        },
        {
          type: "error",
          name: "ERC165Base__InvalidInterfaceId",
          inputs: [],
        },
        {
          type: "error",
          name: "EnumerableSet__IndexOutOfBounds",
          inputs: [],
        },
        {
          type: "error",
          name: "Ownable__NotOwner",
          inputs: [],
        },
        {
          type: "error",
          name: "Ownable__NotTransitiveOwner",
          inputs: [],
        },
        {
          type: "error",
          name: "ReputationTokens__CannotTransferSoulboundToken",
          inputs: [],
        },
        {
          type: "error",
          name: "ReputationTokens__InsufficientBalance",
          inputs: [],
        },
        {
          type: "error",
          name: "UintUtils__InsufficientPadding",
          inputs: [],
        },
        {
          type: "error",
          name: "UintUtils__InvalidBase",
          inputs: [],
        },
      ],
      inheritedFunctions: {
        owner: "lib/reputation/lib/solidstate-solidity/contracts/access/ownable/Ownable.sol",
        transferOwnership: "lib/reputation/lib/solidstate-solidity/contracts/access/ownable/Ownable.sol",
        MINTER_ROLE: "lib/reputation/contracts/ReputationTokensBase.sol",
        TOKEN_MIGRATOR_ROLE: "lib/reputation/contracts/ReputationTokensBase.sol",
        TOKEN_UPDATER_ROLE: "lib/reputation/contracts/ReputationTokensBase.sol",
        accountsByToken: "lib/reputation/contracts/ReputationTokensBase.sol",
        balanceOf: "lib/reputation/contracts/ReputationTokensBase.sol",
        balanceOfBatch: "lib/reputation/contracts/ReputationTokensBase.sol",
        burnedBalanceOf: "lib/reputation/contracts/ReputationTokensBase.sol",
        distributableBalanceOf: "lib/reputation/contracts/ReputationTokensBase.sol",
        distribute: "lib/reputation/contracts/ReputationTokensBase.sol",
        distributeBatch: "lib/reputation/contracts/ReputationTokensBase.sol",
        getRoleAdmin: "lib/reputation/contracts/ReputationTokensBase.sol",
        getRoleMember: "lib/reputation/contracts/ReputationTokensBase.sol",
        getRoleMemberCount: "lib/reputation/contracts/ReputationTokensBase.sol",
        getTokenType: "lib/reputation/contracts/ReputationTokensBase.sol",
        grantRole: "lib/reputation/contracts/ReputationTokensBase.sol",
        hasRole: "lib/reputation/contracts/ReputationTokensBase.sol",
        honestBalanceOf: "lib/reputation/contracts/ReputationTokensBase.sol",
        isApprovedForAll: "lib/reputation/contracts/ReputationTokensBase.sol",
        migrate: "lib/reputation/contracts/ReputationTokensBase.sol",
        migrateBatch: "lib/reputation/contracts/ReputationTokensBase.sol",
        mint: "lib/reputation/contracts/ReputationTokensBase.sol",
        mintBatch: "lib/reputation/contracts/ReputationTokensBase.sol",
        renounceRole: "lib/reputation/contracts/ReputationTokensBase.sol",
        revokeRole: "lib/reputation/contracts/ReputationTokensBase.sol",
        safeBatchTransferFrom: "lib/reputation/contracts/ReputationTokensBase.sol",
        safeTransferFrom: "lib/reputation/contracts/ReputationTokensBase.sol",
        setApprovalForAll: "lib/reputation/contracts/ReputationTokensBase.sol",
        supportsInterface: "lib/reputation/contracts/ReputationTokensBase.sol",
        tokensByAccount: "lib/reputation/contracts/ReputationTokensBase.sol",
        totalHolders: "lib/reputation/contracts/ReputationTokensBase.sol",
        totalSupply: "lib/reputation/contracts/ReputationTokensBase.sol",
        updateToken: "lib/reputation/contracts/ReputationTokensBase.sol",
        updateTokenBatch: "lib/reputation/contracts/ReputationTokensBase.sol",
        uri: "lib/reputation/contracts/ReputationTokensBase.sol",
      },
    },
    ReputationFaucet: {
      address: "0x71089ba41e478702e1904692385be3972b2cbf9e",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "addr",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "claim",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "onERC1155BatchReceived",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bytes4",
              internalType: "bytes4",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "onERC1155Received",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bytes4",
              internalType: "bytes4",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "supportsInterface",
          inputs: [
            {
              name: "interfaceId",
              type: "bytes4",
              internalType: "bytes4",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
      ],
      inheritedFunctions: {
        onERC1155BatchReceived: "lib/openzeppelin-contracts/contracts/token/ERC1155/utils/ERC1155Holder.sol",
        onERC1155Received: "lib/openzeppelin-contracts/contracts/token/ERC1155/utils/ERC1155Holder.sol",
        supportsInterface: "lib/openzeppelin-contracts/contracts/token/ERC1155/utils/ERC1155Holder.sol",
      },
    },
    Hats: {
      address: "0x9bcc604d4381c5b0ad12ff3bf32bede063416bc7",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "_name",
              type: "string",
              internalType: "string",
            },
            {
              name: "_baseImageURI",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "approveLinkTopHatToTree",
          inputs: [
            {
              name: "_topHatDomain",
              type: "uint32",
              internalType: "uint32",
            },
            {
              name: "_newAdminHat",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_eligibility",
              type: "address",
              internalType: "address",
            },
            {
              name: "_toggle",
              type: "address",
              internalType: "address",
            },
            {
              name: "_details",
              type: "string",
              internalType: "string",
            },
            {
              name: "_imageURI",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "badStandings",
          inputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "balanceOf",
          inputs: [
            {
              name: "_wearer",
              type: "address",
              internalType: "address",
            },
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "balance",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "balanceOfBatch",
          inputs: [
            {
              name: "_wearers",
              type: "address[]",
              internalType: "address[]",
            },
            {
              name: "_hatIds",
              type: "uint256[]",
              internalType: "uint256[]",
            },
          ],
          outputs: [
            {
              name: "balances",
              type: "uint256[]",
              internalType: "uint256[]",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "baseImageURI",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "batchCreateHats",
          inputs: [
            {
              name: "_admins",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "_details",
              type: "string[]",
              internalType: "string[]",
            },
            {
              name: "_maxSupplies",
              type: "uint32[]",
              internalType: "uint32[]",
            },
            {
              name: "_eligibilityModules",
              type: "address[]",
              internalType: "address[]",
            },
            {
              name: "_toggleModules",
              type: "address[]",
              internalType: "address[]",
            },
            {
              name: "_mutables",
              type: "bool[]",
              internalType: "bool[]",
            },
            {
              name: "_imageURIs",
              type: "string[]",
              internalType: "string[]",
            },
          ],
          outputs: [
            {
              name: "success",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "batchMintHats",
          inputs: [
            {
              name: "_hatIds",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "_wearers",
              type: "address[]",
              internalType: "address[]",
            },
          ],
          outputs: [
            {
              name: "success",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "buildHatId",
          inputs: [
            {
              name: "_admin",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_newHat",
              type: "uint16",
              internalType: "uint16",
            },
          ],
          outputs: [
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "changeHatDetails",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_newDetails",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "changeHatEligibility",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_newEligibility",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "changeHatImageURI",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_newImageURI",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "changeHatMaxSupply",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_newMaxSupply",
              type: "uint32",
              internalType: "uint32",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "changeHatToggle",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_newToggle",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "checkHatStatus",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "toggled",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "checkHatWearerStatus",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_wearer",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "updated",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "createHat",
          inputs: [
            {
              name: "_admin",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_details",
              type: "string",
              internalType: "string",
            },
            {
              name: "_maxSupply",
              type: "uint32",
              internalType: "uint32",
            },
            {
              name: "_eligibility",
              type: "address",
              internalType: "address",
            },
            {
              name: "_toggle",
              type: "address",
              internalType: "address",
            },
            {
              name: "_mutable",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "_imageURI",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [
            {
              name: "newHatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "getAdminAtLevel",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_level",
              type: "uint32",
              internalType: "uint32",
            },
          ],
          outputs: [
            {
              name: "admin",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getAdminAtLocalLevel",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_level",
              type: "uint32",
              internalType: "uint32",
            },
          ],
          outputs: [
            {
              name: "admin",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "getHatEligibilityModule",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "eligibility",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getHatLevel",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "level",
              type: "uint32",
              internalType: "uint32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getHatMaxSupply",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "maxSupply",
              type: "uint32",
              internalType: "uint32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getHatToggleModule",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "toggle",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getImageURIForHat",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "_uri",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getLocalHatLevel",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "level",
              type: "uint32",
              internalType: "uint32",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "getNextId",
          inputs: [
            {
              name: "_admin",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "nextId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getTippyTopHatDomain",
          inputs: [
            {
              name: "_topHatDomain",
              type: "uint32",
              internalType: "uint32",
            },
          ],
          outputs: [
            {
              name: "domain",
              type: "uint32",
              internalType: "uint32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getTopHatDomain",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "domain",
              type: "uint32",
              internalType: "uint32",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "hatSupply",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "supply",
              type: "uint32",
              internalType: "uint32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "isActive",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "active",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "isAdminOfHat",
          inputs: [
            {
              name: "_user",
              type: "address",
              internalType: "address",
            },
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "isAdmin",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "isApprovedForAll",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "isEligible",
          inputs: [
            {
              name: "_wearer",
              type: "address",
              internalType: "address",
            },
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "eligible",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "isInGoodStanding",
          inputs: [
            {
              name: "_wearer",
              type: "address",
              internalType: "address",
            },
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "standing",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "isLocalTopHat",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "_isLocalTopHat",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "isTopHat",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "_isTopHat",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "isValidHatId",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "validHatId",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "isWearerOfHat",
          inputs: [
            {
              name: "_user",
              type: "address",
              internalType: "address",
            },
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "isWearer",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "lastTopHatId",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint32",
              internalType: "uint32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "linkedTreeAdmins",
          inputs: [
            {
              name: "",
              type: "uint32",
              internalType: "uint32",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "linkedTreeRequests",
          inputs: [
            {
              name: "",
              type: "uint32",
              internalType: "uint32",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "makeHatImmutable",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "mintHat",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_wearer",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "success",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "mintTopHat",
          inputs: [
            {
              name: "_target",
              type: "address",
              internalType: "address",
            },
            {
              name: "_details",
              type: "string",
              internalType: "string",
            },
            {
              name: "_imageURI",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [
            {
              name: "topHatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "multicall",
          inputs: [
            {
              name: "data",
              type: "bytes[]",
              internalType: "bytes[]",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bytes[]",
              internalType: "bytes[]",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "name",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "noCircularLinkage",
          inputs: [
            {
              name: "_topHatDomain",
              type: "uint32",
              internalType: "uint32",
            },
            {
              name: "_linkedAdmin",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "notCircular",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "relinkTopHatWithinTree",
          inputs: [
            {
              name: "_topHatDomain",
              type: "uint32",
              internalType: "uint32",
            },
            {
              name: "_newAdminHat",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_eligibility",
              type: "address",
              internalType: "address",
            },
            {
              name: "_toggle",
              type: "address",
              internalType: "address",
            },
            {
              name: "_details",
              type: "string",
              internalType: "string",
            },
            {
              name: "_imageURI",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "renounceHat",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "requestLinkTopHatToTree",
          inputs: [
            {
              name: "_topHatDomain",
              type: "uint32",
              internalType: "uint32",
            },
            {
              name: "_requestedAdminHat",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "safeBatchTransferFrom",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "safeTransferFrom",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "sameTippyTopHatDomain",
          inputs: [
            {
              name: "_topHatDomain",
              type: "uint32",
              internalType: "uint32",
            },
            {
              name: "_newAdminHat",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "sameDomain",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "setApprovalForAll",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          outputs: [],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "setHatStatus",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_newStatus",
              type: "bool",
              internalType: "bool",
            },
          ],
          outputs: [
            {
              name: "toggled",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "setHatWearerStatus",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_wearer",
              type: "address",
              internalType: "address",
            },
            {
              name: "_eligible",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "_standing",
              type: "bool",
              internalType: "bool",
            },
          ],
          outputs: [
            {
              name: "updated",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "supportsInterface",
          inputs: [
            {
              name: "interfaceId",
              type: "bytes4",
              internalType: "bytes4",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "transferHat",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_from",
              type: "address",
              internalType: "address",
            },
            {
              name: "_to",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "unlinkTopHatFromTree",
          inputs: [
            {
              name: "_topHatDomain",
              type: "uint32",
              internalType: "uint32",
            },
            {
              name: "_wearer",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "uri",
          inputs: [
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "_uri",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "viewHat",
          inputs: [
            {
              name: "_hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "details",
              type: "string",
              internalType: "string",
            },
            {
              name: "maxSupply",
              type: "uint32",
              internalType: "uint32",
            },
            {
              name: "supply",
              type: "uint32",
              internalType: "uint32",
            },
            {
              name: "eligibility",
              type: "address",
              internalType: "address",
            },
            {
              name: "toggle",
              type: "address",
              internalType: "address",
            },
            {
              name: "imageURI",
              type: "string",
              internalType: "string",
            },
            {
              name: "lastHatId",
              type: "uint16",
              internalType: "uint16",
            },
            {
              name: "mutable_",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "active",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "event",
          name: "ApprovalForAll",
          inputs: [
            {
              name: "owner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "operator",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "approved",
              type: "bool",
              indexed: false,
              internalType: "bool",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "HatCreated",
          inputs: [
            {
              name: "id",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "details",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "maxSupply",
              type: "uint32",
              indexed: false,
              internalType: "uint32",
            },
            {
              name: "eligibility",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "toggle",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "mutable_",
              type: "bool",
              indexed: false,
              internalType: "bool",
            },
            {
              name: "imageURI",
              type: "string",
              indexed: false,
              internalType: "string",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "HatDetailsChanged",
          inputs: [
            {
              name: "hatId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "newDetails",
              type: "string",
              indexed: false,
              internalType: "string",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "HatEligibilityChanged",
          inputs: [
            {
              name: "hatId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "newEligibility",
              type: "address",
              indexed: false,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "HatImageURIChanged",
          inputs: [
            {
              name: "hatId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "newImageURI",
              type: "string",
              indexed: false,
              internalType: "string",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "HatMaxSupplyChanged",
          inputs: [
            {
              name: "hatId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "newMaxSupply",
              type: "uint32",
              indexed: false,
              internalType: "uint32",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "HatMutabilityChanged",
          inputs: [
            {
              name: "hatId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "HatStatusChanged",
          inputs: [
            {
              name: "hatId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "newStatus",
              type: "bool",
              indexed: false,
              internalType: "bool",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "HatToggleChanged",
          inputs: [
            {
              name: "hatId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "newToggle",
              type: "address",
              indexed: false,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "TopHatLinkRequested",
          inputs: [
            {
              name: "domain",
              type: "uint32",
              indexed: false,
              internalType: "uint32",
            },
            {
              name: "newAdmin",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "TopHatLinked",
          inputs: [
            {
              name: "domain",
              type: "uint32",
              indexed: false,
              internalType: "uint32",
            },
            {
              name: "newAdmin",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "TransferBatch",
          inputs: [
            {
              name: "operator",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "ids",
              type: "uint256[]",
              indexed: false,
              internalType: "uint256[]",
            },
            {
              name: "amounts",
              type: "uint256[]",
              indexed: false,
              internalType: "uint256[]",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "TransferSingle",
          inputs: [
            {
              name: "operator",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "id",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "amount",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "URI",
          inputs: [
            {
              name: "value",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "id",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "WearerStandingChanged",
          inputs: [
            {
              name: "hatId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "wearer",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "wearerStanding",
              type: "bool",
              indexed: false,
              internalType: "bool",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "AllHatsWorn",
          inputs: [
            {
              name: "hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "AlreadyWearingHat",
          inputs: [
            {
              name: "wearer",
              type: "address",
              internalType: "address",
            },
            {
              name: "hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "BatchArrayLengthMismatch",
          inputs: [],
        },
        {
          type: "error",
          name: "CircularLinkage",
          inputs: [],
        },
        {
          type: "error",
          name: "CrossTreeLinkage",
          inputs: [],
        },
        {
          type: "error",
          name: "HatDoesNotExist",
          inputs: [
            {
              name: "hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "HatNotActive",
          inputs: [],
        },
        {
          type: "error",
          name: "Immutable",
          inputs: [],
        },
        {
          type: "error",
          name: "InvalidHatId",
          inputs: [],
        },
        {
          type: "error",
          name: "InvalidUnlink",
          inputs: [],
        },
        {
          type: "error",
          name: "LinkageNotRequested",
          inputs: [],
        },
        {
          type: "error",
          name: "MaxLevelsReached",
          inputs: [],
        },
        {
          type: "error",
          name: "MaxLevelsReached",
          inputs: [],
        },
        {
          type: "error",
          name: "NewMaxSupplyTooLow",
          inputs: [],
        },
        {
          type: "error",
          name: "NotAdmin",
          inputs: [
            {
              name: "user",
              type: "address",
              internalType: "address",
            },
            {
              name: "hatId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "NotAdminOrWearer",
          inputs: [],
        },
        {
          type: "error",
          name: "NotEligible",
          inputs: [],
        },
        {
          type: "error",
          name: "NotHatWearer",
          inputs: [],
        },
        {
          type: "error",
          name: "NotHatsEligibility",
          inputs: [],
        },
        {
          type: "error",
          name: "NotHatsToggle",
          inputs: [],
        },
        {
          type: "error",
          name: "StringTooLong",
          inputs: [],
        },
        {
          type: "error",
          name: "ZeroAddress",
          inputs: [],
        },
      ],
      inheritedFunctions: {
        approveLinkTopHatToTree: "contracts/Hats/Interfaces/IHats.sol",
        balanceOf: "contracts/Hats/utils/ERC1155.sol",
        balanceOfBatch: "contracts/Hats/utils/ERC1155.sol",
        batchCreateHats: "contracts/Hats/Interfaces/IHats.sol",
        batchMintHats: "contracts/Hats/Interfaces/IHats.sol",
        buildHatId: "contracts/Hats/HatsIdUtilities.sol",
        changeHatDetails: "contracts/Hats/Interfaces/IHats.sol",
        changeHatEligibility: "contracts/Hats/Interfaces/IHats.sol",
        changeHatImageURI: "contracts/Hats/Interfaces/IHats.sol",
        changeHatMaxSupply: "contracts/Hats/Interfaces/IHats.sol",
        changeHatToggle: "contracts/Hats/Interfaces/IHats.sol",
        checkHatStatus: "contracts/Hats/Interfaces/IHats.sol",
        checkHatWearerStatus: "contracts/Hats/Interfaces/IHats.sol",
        createHat: "contracts/Hats/Interfaces/IHats.sol",
        getAdminAtLevel: "contracts/Hats/HatsIdUtilities.sol",
        getAdminAtLocalLevel: "contracts/Hats/HatsIdUtilities.sol",
        getHatEligibilityModule: "contracts/Hats/Interfaces/IHats.sol",
        getHatLevel: "contracts/Hats/HatsIdUtilities.sol",
        getHatMaxSupply: "contracts/Hats/Interfaces/IHats.sol",
        getHatToggleModule: "contracts/Hats/Interfaces/IHats.sol",
        getImageURIForHat: "contracts/Hats/Interfaces/IHats.sol",
        getLocalHatLevel: "contracts/Hats/HatsIdUtilities.sol",
        getNextId: "contracts/Hats/Interfaces/IHats.sol",
        getTippyTopHatDomain: "contracts/Hats/HatsIdUtilities.sol",
        getTopHatDomain: "contracts/Hats/HatsIdUtilities.sol",
        hatSupply: "contracts/Hats/Interfaces/IHats.sol",
        isAdminOfHat: "contracts/Hats/Interfaces/IHats.sol",
        isEligible: "contracts/Hats/Interfaces/IHats.sol",
        isInGoodStanding: "contracts/Hats/Interfaces/IHats.sol",
        isLocalTopHat: "contracts/Hats/HatsIdUtilities.sol",
        isTopHat: "contracts/Hats/HatsIdUtilities.sol",
        isValidHatId: "contracts/Hats/HatsIdUtilities.sol",
        isWearerOfHat: "contracts/Hats/Interfaces/IHats.sol",
        makeHatImmutable: "contracts/Hats/Interfaces/IHats.sol",
        mintHat: "contracts/Hats/Interfaces/IHats.sol",
        mintTopHat: "contracts/Hats/Interfaces/IHats.sol",
        noCircularLinkage: "contracts/Hats/HatsIdUtilities.sol",
        relinkTopHatWithinTree: "contracts/Hats/Interfaces/IHats.sol",
        renounceHat: "contracts/Hats/Interfaces/IHats.sol",
        requestLinkTopHatToTree: "contracts/Hats/Interfaces/IHats.sol",
        sameTippyTopHatDomain: "contracts/Hats/HatsIdUtilities.sol",
        setHatStatus: "contracts/Hats/Interfaces/IHats.sol",
        setHatWearerStatus: "contracts/Hats/Interfaces/IHats.sol",
        transferHat: "contracts/Hats/Interfaces/IHats.sol",
        unlinkTopHatFromTree: "contracts/Hats/Interfaces/IHats.sol",
        uri: "contracts/Hats/utils/ERC1155.sol",
        viewHat: "contracts/Hats/Interfaces/IHats.sol",
        isApprovedForAll: "contracts/Hats/utils/ERC1155.sol",
        safeBatchTransferFrom: "contracts/Hats/utils/ERC1155.sol",
        safeTransferFrom: "contracts/Hats/utils/ERC1155.sol",
        setApprovalForAll: "contracts/Hats/utils/ERC1155.sol",
        supportsInterface: "contracts/Hats/utils/ERC1155.sol",
        multicall: "contracts/Hats/utils/Multicallable.sol",
        linkedTreeAdmins: "contracts/Hats/HatsIdUtilities.sol",
        linkedTreeRequests: "contracts/Hats/HatsIdUtilities.sol",
      },
    },
    null: {
      address: "0xac9fcba56e42d5960f813b9d0387f3d3bc003338",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "erc1155Address",
              type: "address",
              internalType: "address",
            },
            {
              name: "amount",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "getWearerStatus",
          inputs: [
            {
              name: "_wearer",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "eligible",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "standing",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
      ],
      inheritedFunctions: {},
    },
    ActiveModule: {
      address: "0x54b8d8e2455946f2a5b8982283f2359812e815ce",
      abi: [
        {
          type: "function",
          name: "getWearerStatus",
          inputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "eligible",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "standing",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "pure",
        },
      ],
      inheritedFunctions: {},
    },
    ERC1155EligibiltiyModule: {
      address: "0x56d13eb21a625eda8438f55df2c31dc3632034f5",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "erc1155Address",
              type: "address",
              internalType: "address",
            },
            {
              name: "amount",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "getWearerStatus",
          inputs: [
            {
              name: "_wearer",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "eligible",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "standing",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
      ],
      inheritedFunctions: {},
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
